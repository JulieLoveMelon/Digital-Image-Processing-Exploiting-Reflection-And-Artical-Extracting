function [ boundary ] = lunkuo( original_image )
image=original_image;

%% 滤波、平滑处理，初步去除噪声
h=fspecial('average');
image=imfilter(image,h,'replicate');
image=rgb2gray(image);
[m n]=size(image);
h=imhist(image);
hs = smooth(h,10);
h=fspecial('gaussian');

%% 通过灰度均值二值化
vally = [];
for i = 2:255
    if hs(i-1) > hs(i) && hs(i+1) > hs(i) && i < 100 && i > 10
        vally = [vally i];
    end
end
for i = 1:m
    old(1,(n*(i-1)+1):n*i) = i;
    old(2,(n*(i-1)+1):n*i) = 1:n;
end
Thre = mean(vally);
for i = 1:length(old)
    if(image(old(1,i),old(2,i)) > Thre)
        image(old(1,i),old(2,i)) = 255;
    else
        image(old(1,i),old(2,i)) = 0;
    end
end

%% 提取轮廓
test =  edge(image,'log');
%对轮廓初步膨胀
se1=strel('square',2);
se2=strel('square',2);
image=imdilate(test,se1);
%寻找联通区
[image,num] = bwlabel(image);
%去除小的联通区
for i = 1:num
    if length(find(image==i)) < 500
        image(find(image==i))=0;
    else
        image(find(image==i))=255;
    end
end
%对剩下的联通区进一步膨胀腐蚀
image=imdilate(image,se1);
image=imerode(image,se2);
[fin,num] = bwlabel(image);
boundary = zeros(m,n);
boundary(find(fin==1)) = original_image(find(fin==1));